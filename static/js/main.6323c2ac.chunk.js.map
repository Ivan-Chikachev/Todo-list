{"version":3,"sources":["context/alert/alertContext.js","context/firebase/firebaseContext.jsx","components/Form.jsx","components/Notes.jsx","components/Alert.jsx","components/Loader.jsx","components/Page.jsx","components/About.jsx","components/Navbar.jsx","context/types.jsx","context/alert/alertReducer.js","context/alert/AlertState.js","context/firebase/firebaseReducer.js","context/firebase/FirebaseState.js","App.js","reportWebVitals.js","index.js"],"names":["AlertContext","createContext","FirebaseContext","Form","useState","value","setValue","alert","useContext","firebase","onSubmit","event","preventDefault","trim","addNote","then","show","catch","className","type","placeholder","onChange","e","target","Notes","props","notes","map","note","title","Date","toLocaleDateString","onClick","removeNote","name","Alert","hide","visible","text","aria-label","aria-hidden","Loader","role","Page","loading","fetchNotes","useEffect","About","Navbar","exact","to","SHOW_ALERT","HIDE_ALERT","SHOW_LOADER","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","alertReducer","state","action","typeAlert","AlertState","useReducer","dispatch","Provider","children","firebaseReducer","filter","id","remove","url","FirebaseState","showLoader","a","axios","get","res","Object","keys","data","key","date","toJSON","post","Error","massage","delete","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6323c2ac.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport const AlertContext = createContext()","import {createContext} from 'react';\r\n\r\nexport const FirebaseContext = createContext()","import React, {useContext, useState} from 'react';\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\n\r\nconst Form = () => {\r\n    const [value, setValue] = useState('')\r\n    const alert = useContext(AlertContext)\r\n    const firebase = useContext(FirebaseContext)\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if (value.trim()){\r\n            firebase.addNote(value.trim()).then(()=>{\r\n                alert.show(`Заметка \"${value}\" была создана`, 'success')\r\n            }).catch(()=>{\r\n                alert.show(`Что-то пошло не так`, 'danger')\r\n            })\r\n\r\n            setValue('')\r\n        } else {alert.show('Введите название заметки')}\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={submitHandler}>\r\n            <div className='form-group'>\r\n                <input className={'form-control'}\r\n                       type=\"text\"\r\n                       placeholder={'Введите название заметки'}\r\n                       value={value}\r\n                       onChange={e => setValue(e.target.value)}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default Form;","import React, {useContext, useEffect, useState} from 'react';\r\n\r\nconst Notes = (props) => {\r\n\r\n    return (\r\n        <ul className={'list-group'}>\r\n            {props.notes.map(note =>\r\n                <li className='list-group-item note' key={note.name}>\r\n                    <div>\r\n                        <strong className={'mr-2'}>{note.title}</strong>\r\n                        <small>{new Date().toLocaleDateString()}</small>\r\n                    </div>\r\n                    <button\r\n                        onClick={()=>{props.removeNote(note.name)}}\r\n                        className='btn btn-outline-danger btn-sm note'>\r\n                        &times;\r\n                    </button>\r\n                </li>)}\r\n        </ul>\r\n    )\r\n}\r\nexport default Notes;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {AlertContext} from \"../context/alert/alertContext\";\r\n\r\n\r\nconst Alert = () => {\r\n    const {alert, hide} = useContext(AlertContext)\r\n    if (!alert.visible) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={`alert alert-${alert.type || 'warning'} alert-dismissible`}>\r\n            <strong className={'mr-2'}>Внимание!</strong>\r\n            {alert.text}\r\n            <button\r\n                onClick={hide}\r\n                className={'close'}\r\n                type={'button'}\r\n                aria-label={'Close'}>\r\n                <span aria-hidden={'true'}>&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\nexport default Alert;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role={'status'}>\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Loader;","import React, {useContext, useEffect, useState} from 'react';\r\nimport Form from \"./Form\";\r\nimport Notes from \"./Notes\";\r\nimport Alert from \"./Alert\";\r\nimport {FirebaseContext} from \"../context/firebase/firebaseContext\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst Page = () => {\r\n    const {loading, notes, fetchNotes, removeNote} = useContext(FirebaseContext);\r\n    useEffect(() => {\r\n      fetchNotes()\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Alert alert={alert}/>\r\n            <Form />\r\n\r\n            <hr/>\r\n            {loading?<Loader/>:<Notes notes={notes} removeNote={removeNote}/>}\r\n        </>\r\n    )\r\n}\r\nexport default Page;","import React, {useEffect, useState} from 'react';\r\n\r\nconst About = (props) => {\r\n    const [type, setType] = useState('Name')\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Приложение \"Список дел\"</h1>\r\n                <p className=\"lead\">С помощью данного приложения вы можете составлять свой список дел. Заметку можно так же удалить после ее выполнения.</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => (\r\n    <>\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary\">\r\n            <div className='navbar-brand'>Список дел</div>\r\n            <ul className=\"navbar-nav nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" exact to='/page'>Заметки</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink className=\"nav-link\" to='/about'>Информация</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </>\r\n\r\n)\r\nexport default Navbar;","export const SHOW_ALERT = 'SHOW_ALERT'\r\nexport const HIDE_ALERT = 'HIDE_ALERT'\r\nexport const SHOW_LOADER = 'SHOW_LOADER'\r\nexport const ADD_NOTE = 'ADD_NOTE'\r\nexport const FETCH_NOTES = 'FETCH_NOTES'\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE'","import {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\n\r\nexport const alertReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SHOW_ALERT:\r\n            return {...state, text: action.text, type: action.typeAlert, visible: true};\r\n        case HIDE_ALERT:\r\n            return {...state, visible: false};\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport {AlertContext} from \"./alertContext\";\r\nimport {alertReducer} from \"./alertReducer\";\r\nimport {HIDE_ALERT, SHOW_ALERT} from \"../types\";\r\n\r\nexport const AlertState = (props) => {\r\n    const [state, dispatch] = useReducer(alertReducer, {visible: false})\r\n    const show = (text, type = 'warning') => {\r\n        dispatch({\r\n            type: SHOW_ALERT,\r\n            text: text,\r\n            typeAlert: type\r\n        })\r\n    }\r\n    const hide = () => {dispatch({type: HIDE_ALERT,})}\r\n\r\n    return (\r\n        <AlertContext.Provider value={{show, hide,alert: state }}>\r\n            {props.children}\r\n        </AlertContext.Provider>\r\n    )\r\n}","import {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\n\r\n\r\nexport const firebaseReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case SHOW_LOADER:\r\n            return {...state, loading: true};\r\n        case ADD_NOTE:\r\n            return {...state, notes: [...state.notes, action.note]};\r\n        case FETCH_NOTES:\r\n            return {...state,  loading: false, notes: action.note};\r\n        case REMOVE_NOTE:\r\n            return {...state, notes: state.notes.filter(note => note.name !== action.id), remove: true};\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {useReducer} from 'react';\r\nimport {FirebaseContext} from \"./firebaseContext\";\r\nimport {firebaseReducer} from \"./firebaseReducer\";\r\nimport {ADD_NOTE, FETCH_NOTES, REMOVE_NOTE, SHOW_LOADER} from \"../types\";\r\nimport axios from \"axios\";\r\n\r\nconst url = 'https://react-app-todo-list-56e4a-default-rtdb.firebaseio.com'\r\n\r\nexport const FirebaseState = (props) => {\r\n    const initialState = {\r\n        notes: [],\r\n        loading: false\r\n    }\r\n    const [state, dispatch] = useReducer(firebaseReducer, initialState)\r\n\r\n    const showLoader = () => {\r\n        dispatch({type: SHOW_LOADER})\r\n    }\r\n\r\n    const fetchNotes = async () => {\r\n        showLoader()\r\n        const res = await axios.get(`${url}/notes.json`)\r\n        const notes = Object.keys(res.data).map(key => {\r\n            return {...res.data[key], name: key}\r\n        })\r\n        dispatch({type: FETCH_NOTES, note: notes})\r\n    }\r\n    const addNote = async title => {\r\n        const note = {\r\n            title, date: new Date().toJSON()\r\n        }\r\n        try {\r\n            const res = await axios.post(`${url}/notes.json`, note)\r\n            const notes = {...note, id: res.data.name}\r\n\r\n            dispatch({type: ADD_NOTE, note: notes})\r\n        } catch (e) {\r\n            throw new Error(e.massage)\r\n        }\r\n\r\n    }\r\n    const removeNote = async id => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n        dispatch({\r\n            type: REMOVE_NOTE,\r\n            id: id\r\n        })\r\n    }\r\n    return (\r\n        <FirebaseContext.Provider value={{\r\n            showLoader, addNote, removeNote, fetchNotes, loading: state.loading,\r\n            notes: state.notes\r\n        }}>\r\n            {props.children}\r\n        </FirebaseContext.Provider>\r\n    )\r\n}","import './index.scss';\nimport Page from \"./components/Page\";\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport {AlertContext} from \"./context/alert/alertContext\";\nimport {AlertState} from \"./context/alert/AlertState\";\nimport {FirebaseState} from \"./context/firebase/FirebaseState\";\n\n\nfunction App() {\n\n    return (\n        <FirebaseState>\n        <AlertState>\n            <BrowserRouter>\n                <Navbar/>\n                <div className=\"container pt-4\">\n\n                    <Switch>\n                        <Route path={'/page'} exact component={Page}/>\n                        <Route path={'/about'} component={About}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        </AlertState>\n        </FirebaseState>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}